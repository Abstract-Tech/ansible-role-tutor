---
- name: TUTOR | Checkout config repo
  ansible.builtin.git:
    repo: "{{ tutor_config_repo }}"
    dest: "{{ tutor_config_path }}"
    clone: true
    update: true
    recursive: false
    force: true
    version: "{{ tutor_config_version }}"
  register: tutor_checkout_result
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: "tutor_checkout_result.before != tutor_checkout_result.after"
  notify:
    - Reload tutor
  tags:
    - tutor_config
    - tutor_deploy

- name: TUTOR | Update config with openedx image
  ansible.builtin.command: "{{ tutor_venv_path }}/{{ tutor_exec_name }} config save --set DOCKER_IMAGE_OPENEDX={{ tutor_openedx_image }}"
  environment:
    TUTOR_ROOT: "{{ tutor_config_path }}"
    TUTOR_PLUGINS_ROOT: "{{ tutor_config_path }}/plugins"
    TUTOR_APP: "{{ tutor_app }}"
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: false  # It woulbe nice to detect change somehow
  when: tutor_openedx_image is defined
  tags:
    - tutor_config
    - tutor_deploy

- name: TUTOR | Update config with production settings
  ansible.builtin.command: "{{ tutor_venv_path }}/{{ tutor_exec_name }} config save --set {{ item.key }}={{ item.value | to_yaml }}"
  environment:
    TUTOR_ROOT: "{{ tutor_config_path }}"
    TUTOR_PLUGINS_ROOT: "{{ tutor_config_path }}/plugins"
    TUTOR_APP: "{{ tutor_app }}"
  loop: "{{ tutor_prod_config | combine(tutor_prod_host_config) | dict2items }}"
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: false  # It shouldn't really be changed after install
  tags:
    - tutor_config
    - tutor_deploy

# TODO: It can be done in one command
- name: TUTOR | Update config with host-specific secrets
  ansible.builtin.command: "{{ tutor_venv_path }}/{{ tutor_exec_name }} config save --set {{ item.key }}={{ item.value | to_yaml }}"
  environment:
    TUTOR_ROOT: "{{ tutor_config_path }}"
    TUTOR_PLUGINS_ROOT: "{{ tutor_config_path }}/plugins"
    TUTOR_APP: "{{ tutor_app }}"
  loop: "{{ tutor_secrets | dict2items }}"
  no_log: true
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: false  # It shouldn't really be changed after install
  tags:
    - tutor_config
    - tutor_deploy

- name: TUTOR | Update config with environment-specific secrets
  ansible.builtin.command: |
    {{ tutor_venv_path }}/{{ tutor_exec_name }} config save --set {{ item.key }}={{ lookup("env", item.value) | to_yaml }}
  environment:
    TUTOR_ROOT: "{{ tutor_config_path }}"
    TUTOR_PLUGINS_ROOT: "{{ tutor_config_path }}/plugins"
    TUTOR_APP: "{{ tutor_app }}"
  loop: "{{ tutor_env_secrets | dict2items }}"
  when: tutor_env_secrets is defined
  no_log: true
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: true  # Might change every moment
  tags:
    - tutor_config
    - tutor_env_config
    - tutor_deploy

- name: TUTOR | Install production plugins
  ansible.builtin.copy:
    content: "{{ item.value }}"
    dest: "{{ tutor_config_path }}/plugins/{{ item.key }}.yml"
    mode: 0700
  loop: "{{ tutor_plugins | dict2items }}"
  no_log: true
  become: true
  become_user: "{{ tutor_user }}"
  when: tutor_plugins is defined
  tags:
    - tutor_config
    - tutor_deploy
    - tutor_plugins

- name: TUTOR | Enable production plugins
  ansible.builtin.command: "{{ tutor_venv_path }}/{{ tutor_exec_name }} plugins enable {{ tutor_plugins.keys() | list | join(' ') }}"
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: true
  when: tutor_plugins is defined
  tags:
    - tutor_config
    - tutor_deploy
    - tutor_plugins

- name: TUTOR | Install compose overrides
  ansible.builtin.copy:
    content: "{{ tutor_compose_overrides }}"
    dest: "{{ tutor_config_path }}/env/local/docker-compose.overrides.yml"
  become: true
  become_user: "{{ tutor_user }}"
  when: tutor_compose_overrides is defined and tutor_compose_overrides != None
  notify:
    - Reload tutor
  tags:
    - tutor_config
    - tutor_deploy
    - tutor_compose

- name: TUTOR | Run post hooks
  ansible.builtin.command: "{{ item }}"
  environment:
    TUTOR_ROOT: "{{ tutor_config_path }}"
    TUTOR_PLUGINS_ROOT: "{{ tutor_config_path }}/plugins"
    TUTOR_APP: "{{ tutor_app }}"
  loop: "{{ tutor_post_hooks }}"
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: false  # It woulbe nice to detect change somehow
  when: tutor_post_hooks is defined
  tags:
    - tutor_config
    - tutor_deploy
