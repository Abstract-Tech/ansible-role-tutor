---

- name: TUTOR | Ensure tutor group
  ansible.builtin.group:
    name: "{{ tutor_group }}"
    system: yes
    state: present
  tags:
    - tutor_install

- name: TUTOR | Ensure tutor user
  ansible.builtin.user:
    name: "{{ tutor_user }}"
    group: "{{ tutor_group }}"
    groups:
      - docker
    system: false
    createhome: true
    shell: "{{ tutor_user_shell }}"
  tags:
    - tutor_install

- name: TUTOR | Ensure .ssh directory exists.
  ansible.builtin.file:
    dest: "{{ tutor_ssh_key_file | dirname }}"
    mode: 0700
    owner: "{{ tutor_user }}"
    state: directory
  tags:
    - tutor_install
    - tutor_ssh
  when: tutor_ssh_key is defined

- name: TUTOR | Install ssh key
  ansible.builtin.copy:
    content: "{{ tutor_ssh_key }}"
    dest: "{{ tutor_ssh_key_file }}"
    mode: 0600
    owner: "{{ tutor_user }}"
  tags:
    - tutor_install
    - tutor_ssh
  when: tutor_ssh_key is defined

- name: Allow tutor user nopasswd sudo access. It's in the docker group anyway.
  community.general.sudoers:
    name: tutor-service
    user: tutor
    commands: ALL
    nopassword: true
  tags:
    - tutor_install

- name: TUTOR | Check tutor version
  ansible.builtin.command: "{{ tutor_venv_path }}/{{ tutor_exec_name }} --version"
  register: tutor_check
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: false
  ignore_errors: true
  check_mode: no
  tags:
    - tutor_install
    - tutor_deploy

- name: TUTOR | Install python3 & native dependencies
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - acl
      - build-essential
      - python3
      - python3-pip
      - python3-dev
      - python3-virtualenv
      - libyaml-dev
      - git
  when: tutor_force_reinstall or tutor_check is failed or tutor_version not in tutor_check.stdout
  tags:
    - tutor_install

- name: TUTOR | Create virtualenv directory
  ansible.builtin.file:
    path: /opt/tutor
    recurse: yes
    mode: 'u+rwx'
    owner: "{{ tutor_user }}"
    group: "{{ tutor_group }}"
  when: tutor_force_reinstall or tutor_check is failed or tutor_version not in tutor_check.stdout
  tags:
    - tutor_install

- name: TUTOR | Install tutor from PyPI
  ansible.builtin.pip:
    name: "tutor[full]=={{ tutor_version }}"
    virtualenv: "{{ tutor_venv_path }}"
    virtualenv_python: /usr/bin/python3
  become: true
  become_user: "{{ tutor_user }}"
  when: tutor_force_reinstall or tutor_check is failed or tutor_version not in tutor_check.stdout
  notify:
    - Restart tutor
  tags:
    - tutor_install
    - tutor_deploy

- name: TUTOR | Checkout config repo
  ansible.builtin.git:
    repo: "{{ tutor_config_repo }}"
    dest: "{{ tutor_config_path }}"
    clone: yes
    update: yes
    force: true
    version: "{{ tutor_config_version }}"
  register: tutor_checkout_result
  become: true
  become_user: "{{ tutor_user }}"
  changed_when: "tutor_checkout_result.before != tutor_checkout_result.after"
  notify:
    - Restart tutor
  tags:
    - tutor_install
    - tutor_deploy

- name: TUTOR | Pull all required images
  ansible.builtin.command: "{{ tutor_venv_path }}/{{ tutor_exec_name }} images pull all"
  environment:
    TUTOR_ROOT: "{{ tutor_config_path }}"
    TUTOR_PLUGINS_ROOT: "{{ tutor_config_path }}/plugins"
    TUTOR_APP: "{{ tutor_app }}"
  become: true
  become_user: "{{ tutor_user }}"
  register: tutor_pull_result
  notify:
    - Restart tutor
  changed_when: '"Pull complete" in tutor_pull_result.stdout or "Downloaded newer image" in tutor_pull_result.stdout'
  tags:
    - tutor_install
    - tutor_deploy
    - tutor_pull
